/*
 * responsive.less
 * ===============
 * Defines layouts for modern browsers with wider screens
 * ------------------------------------------------------
 *
 * Is only used in responsive designs
 * In regular design it should be enough to define layout in base.less
 * 
 * Should be loaded only by browsers that support media queries
 *
 * ----------------------------------------------------------------- */
/*------------------------------------*\
	CONTENTS
\*------------------------------------*/
/*
INITIALIZE
DEFINE LAYOUTS
*/
/*-------------------------------------------------------------------*\
	INITIALIZE

	Declare LESS variables and mixins (LESS Functions)
\*-------------------------------------------------------------------*/
/*
 * pool/variables/variables.less
 * ==================
 * Variables to customize the look and feel
 * ----------------------------------------------------------------- */
/*
 * pool/mixins/grid.less 
 * ====================
 * Useful mixins used to define the layout
 *
 * Source: http://semantic.gs
 *
 * ----------------------------------------------------------------- */
/*-------------------------------------------------------------------*\
        Common Grid functions
\*-------------------------------------------------------------------*/
/*-------------------------------------------------------------------*\
        Clearfix
\*-------------------------------------------------------------------*/
/*-------------------------------------------------------------------*\
        Debugging functions
\*-------------------------------------------------------------------*/
/*-------------------------------------------------------------------*\
	DEFINE LAYOUTS

	Use media queries to assign layouts to different screens
\*-------------------------------------------------------------------*/
/*
 * pool/layouts/480up.less
 * ======================
 * Layout mixin for mobile devices
 * ----------------------------------------------------------------- */
/*
 * pool/layouts/600up.less
 * ======================
 * Layout mixin for mobile devices
 * ----------------------------------------------------------------- */
/*
 * pool/layouts/768up.less
 * ======================
 * Layout mixin for tablets
 * ----------------------------------------------------------------- */
/*
 * pool/layouts/992up.less
 * ======================
 * Layout mixin for laptop/desktop
 * ----------------------------------------------------------------- */
/*
 * pool/layouts/1382up.less
 * ======================
 * Layout mixin for wide desktop screens
 * ----------------------------------------------------------------- */
/* 480px */
@media only screen and (min-width: 480px) {
  body.debug::before {
    content: "media query (480>) fired";
    font-weight: bold;
    display: block;
    text-align: center;
    background: red;
    position: absolute;
    right: 0;
    left: 0;
    top: 0;
    z-index: 99;
  }
  body.debug {
    margin-top: 24px;
  }
}
/* 600px */
@media only screen and (min-width: 600px) {
  body {
    font-size: 16px;
  }
  body.debug::before {
    content: "media query (600>) fired";
    font-weight: bold;
    display: block;
    text-align: center;
    background: green;
    position: absolute;
    right: 0;
    left: 0;
    top: 0;
    z-index: 99;
  }
  body.debug {
    margin-top: 24px;
  }
}
/* 768px */
@media only screen and (min-width: 768px) {
  body {
    font-size: 18px;
    text-align: left;
  }
  .one-full {
    width: 100%;
  }
  .one-half {
    float: left;
    width: 50%;
  }
  .one-third {
    float: left;
    width: 33.33333333333333%;
  }
  .two-third {
    float: left;
    width: 66.66666666666666%;
  }
  .one-quarter {
    float: left;
    width: 25%;
  }
  body.debug::before {
    content: "media query (768>) fired";
    font-weight: bold;
    display: block;
    text-align: center;
    background: blue;
    position: absolute;
    right: 0;
    left: 0;
    top: 0;
    z-index: 99;
  }
  body.debug {
    margin-top: 24px;
  }
}
/* 992px */
@media only screen and (min-width: 992px) {
  body {
    font-size: 22px;
  }
  .one-full {
    width: 960px;
    margin: 0 auto;
  }
  .one-half {
    float: left;
    width: 480px;
  }
  .one-third {
    float: left;
    width: 320px;
  }
  .two-third {
    float: left;
    width: 640px;
  }
  .one-quarter {
    float: left;
    width: 240px;
  }
  body.debug::before {
    content: "media query (992>) fired";
    font-weight: bold;
    display: block;
    text-align: center;
    background: purple;
    position: absolute;
    right: 0;
    left: 0;
    top: 0;
    z-index: 99;
  }
  body.debug {
    margin-top: 24px;
  }
}
/* 1382px */
@media only screen and (min-width: 1382px) {
  body.debug::before {
    content: "media query (1382>) fired";
    font-weight: bold;
    display: block;
    text-align: center;
    background: yellow;
    position: absolute;
    right: 0;
    left: 0;
    top: 0;
    z-index: 99;
  }
  body.debug {
    margin-top: 24px;
  }
}